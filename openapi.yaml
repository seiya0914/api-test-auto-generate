openapi: 3.0.2
info:
  title: Simple Employee List API
  version: 1.0.0
  description: An extremely basic API to list, create, and update employees.
servers:
  - url: http://localhost:8000
    description: Development server

paths:
  /users:
    get:
      summary: Get a list of employees
      operationId: listEmployees
      tags:
        - Employees
      responses:
        '200':
          description: A list of employees with name and department.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SimpleEmployee'
    post:
      summary: Create a new employee
      operationId: createEmployee
      tags:
        - Employees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleEmployee' # Request body includes ID, handled by app logic
      responses:
        '201':
          description: Employee created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleEmployee'
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        description: The unique identifier of the employee.
        schema:
          type: string
          format: uuid
    put:
      summary: Update an existing employee
      operationId: updateEmployee
      tags:
        - Employees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleEmployeeUpdate' # Use new schema for update
      responses:
        '200':
          description: Employee updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleEmployee'
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Employee not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    SimpleEmployee:
      type: object
      required:
        - id
        - name
        - department
      properties:
        id:
          type: string
          format: uuid # Specify format for clarity
          description: Unique identifier for the employee.
          readOnly: true # ID is typically not changed via PUT body
        name:
          type: string
          description: Employee's name.
          example: Taro Yamada
        department:
          type: string
          description: Employee's department.
          example: Sales

    SimpleEmployeeUpdate:
      type: object
      required:
        - name
        - department
      properties:
        name:
          type: string
          description: Employee's updated name.
          example: Taro Yamada Updated
        department:
          type: string
          description: Employee's updated department.
          example: Sales Updated

    Error:
      type: object
      required:
        - detail
      properties:
        detail:
          type: string
          description: A message describing the error.
          example: Invalid input data provided.